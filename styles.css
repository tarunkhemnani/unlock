:root {
  /* reduced by 4px from your current 80px */
  --circle-size: 80px;
  --gap-x: 28px;
  --gap-y: 18px;
  --safe-bottom: env(safe-area-inset-bottom);
}
/* Prevent default browser double-tap/pinch hints — makes taps act like app interactions */
html, body {
  touch-action: manipulation; /* prefer single-finger gestures, reduce double-tap zoom */
}

/* base */
html,body{
  height:100%;
  margin:0;
  padding:0;
  background-color:#000;
  font-family: -apple-system, BlinkMacSystemFont, "SF Pro Text", "Helvetica Neue", Arial, sans-serif;
  -webkit-font-smoothing:antialiased;
  -webkit-text-size-adjust:100%;
}

/* wallpaper fixed layer */
.lockscreen::before{
  content: "";
  position: fixed;
  inset: 0;
  background-image: url('wallpaper.jpg'); /* keep your wallpaper file */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  z-index: 0;
}

/* container above wallpaper */
.lockscreen{
  position: relative;
  z-index: 1;
  height: 100svh;
  min-height: 100vh;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding-top: calc(env(safe-area-inset-top) + 84px);
  padding-bottom: calc(var(--safe-bottom) + 8px);
  box-sizing: border-box;
  overflow: hidden;
}

/* prompt text */
.prompt{
  position: relative;
  z-index: 3;
  text-align:center;
  font-size:20px;
  font-weight:600;
  line-height:1.15;
  text-shadow: 0 3px 12px rgba(0,0,0,0.6);
  margin-bottom: 18px;
  color: white;
}

/* dots: make the empty ring more white like iPhone */
.dots{
  display:flex;
  gap:14px;
  margin-bottom: 28px;
  pointer-events:none;
  z-index: 3;
}
.dot {
  width: 10px; /* was 14px */
  height: 10px; /* was 14px */
  border-radius: 50%;
  border: 1.25px solid #fff; /* pure white */
  /* stronger white ring before typing */
  background: transparent;
  transition: background .12s ease, transform .12s ease;
  box-shadow: 0 2px 6px rgba(0,0,0,0.45) inset;
}
.dot.filled {
  background: #fff; /* pure white */
  border-color: #fff; /* pure white border */
  transform: scale(1.06);
  box-shadow: none;
}

/* keypad grid */
.keypad{
  width: 100%;
  max-width: 420px;
  display: grid;
  grid-template-columns: repeat(3, var(--circle-size));
  gap: var(--gap-y) var(--gap-x);
  justify-content: center;
  align-items: center;
  margin-top: 50px;
  z-index: 2;
}

/* keys: -2px size change applied via --circle-size */

.key {
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 999px;
  display: inline-flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;

  /* iOS frosted glass effect */
  background: rgba(255, 255, 255, 0.07); /* slightly lighter tint */
  backdrop-filter: blur(30px);
  -webkit-backdrop-filter: blur(30px);

  /* no border */
  border: none;

  /* clean shadow, no top half-moon */
  box-shadow: 0 0 8px rgba(0, 0, 0, 0.35);

  color: white;
  font-size: 32px;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  user-select: none;
  position: relative;
  z-index: 2;
  transition: transform .12s ease, box-shadow .12s ease, background .12s ease;
}

.key:active {
  transform: scale(.985);
  background: rgba(255, 255, 255, 0.1); /* slightly brighter on tap */
  backdrop-filter: blur(30px);
  -webkit-backdrop-filter: blur(30px);
}


.key.empty{
  background: transparent !important;
  box-shadow:none !important;
  cursor: default;
  pointer-events: none;
  visibility: hidden;
}

/* number and letters */
.key .num{
  display:block;
  font-weight:600;
  line-height:1;
  font-size: 34px;
  color: white !important;
  text-shadow: 0 2px 10px rgba(0,0,0,0.45);
}
.key .letters {
  display: block;
  font-size: 12px;
  color: #fff; /* pure white */
  opacity: 1;
  margin-top: 6px;
  letter-spacing: 0.9px;
  text-shadow: 0 1px 2px rgba(0,0,0,0.45);
  font-weight: 600; 
}
.bottom-buttons {
  margin-bottom: 14px; /* smaller than before */
}

/* bottom actions */
.bottom-actions{
  position: absolute;
  left: 0; right: 0;
  bottom: calc(var(--safe-bottom) + 8px);
  display:flex;
  justify-content: space-between;
  padding: 0 28px;
  box-sizing:border-box;
  z-index: 3;
}
.action{
  background:none; border:none;
  color:white; font-size: 15px; opacity: 0.98;
  cursor:pointer; -webkit-tap-highlight-color: transparent;
}
/* ---------- UNLOCK ANIMATION + HOMESCREEN REPLICA (append at EOF) ---------- */
.unlock-overlay {
  position: fixed;
  inset: 0;
  z-index: 9999;              /* above everything when active */
  display: none;             /* toggled by JS */
  align-items: center;
  justify-content: center;
  background: transparent;
  pointer-events: none;      /* disabled until fully shown */
}

.homescreen-img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  transform-origin: center;
  transform: scale(0.98);
  opacity: 0;
  filter: blur(4px) saturate(0.95);
}

.unlock-overlay.show {
  display: flex;
  pointer-events: auto; /* allow interaction after reveal if desired */
}
.unlock-overlay.show .homescreen-img {
  animation: homescreenReveal 650ms cubic-bezier(.2,.8,.2,1) forwards;
}

@keyframes homescreenReveal {
  0%   { transform: scale(0.98); opacity: 0; filter: blur(8px) saturate(.8); }
  60%  { transform: scale(1.02); opacity: 1; filter: blur(1px) saturate(1.05); }
  100% { transform: scale(1);    opacity: 1; filter: blur(0) saturate(1); }
}

/* subtle lock UI fade/zoom — JS will add .unlocking to .lockscreen */
.lockscreen.unlocking {
  transition: transform 450ms cubic-bezier(.2,.8,.2,1), opacity 450ms ease-in;
  transform: scale(0.98);
  opacity: 0;
}
/* ----- wrong passcode animation ----- */
/* dots horizontal shake */
@keyframes passShake {
  0%   { transform: translateX(0); }
  10%  { transform: translateX(-10px); }
  30%  { transform: translateX(8px); }
  50%  { transform: translateX(-6px); }
  70%  { transform: translateX(4px); }
  90%  { transform: translateX(-2px); }
  100% { transform: translateX(0); }
}
/* add the animation to the dots when wrong */
.dots.wrong {
  animation: passShake 620ms cubic-bezier(.36,.07,.19,.97);
  transform-origin: center;
}

/* ensure dots keep layout while animating */
.dots { will-change: transform; }




